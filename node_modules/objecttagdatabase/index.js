'use strict';
var fs = require('fs');
const path = require('path');

// exports.printMsg = function () {
//     console.log("Just a very simple test function.")
//     return 0
// }

class ClothData {
    constructor(imagePath, tags) {
        this._imagePath = imagePath
        this._tags = tags
    }

    describe() {
        alert(`Testing testing testing.`)
    }
}

const rootDirectory = 'Clothes'

//Copy images to environment directory and generate corresponding tags file.
/*
The hierarchy will be as followed:
-- Clothes
*/

function saveImagesAsDatabase(imagePaths) {
    imagePaths.forEach(function (imagePath) {
        fs.copyFile(imagePath, path.join(rootDirectory, path.basename(imagePath)), (err) => {
            if (err != null) { return }
        })

        //Write file
        fs.writeFile(path.join(rootDirectory, path.basename(imagePath).split('.')[0]) + '.txt', '', 'utf-8', (err) => {
            if (err) {
                return;
            }
        })
    })
    console.log("Successfully copied all files to the working environment.")
}

//Use when user choose a new tag for a picture
function appendTagToImage(fileName, tagName) {
    fs.appendFile(path.join("Clothes", fileName + '.txt'), `${tagName}\n`, function (err) {
        if (err) throw err;
        console.log(`Saved tag name: ${tagName}`);
    });
}

//Load all saved images and append into the ClothData list (return the list)
function loadDatabase() {
    const database = []
    fs.readdirSync(rootDirectory).forEach(function(file) {
        if (file.split('.')[1] == 'txt') { return }
        const imagePath = path.join(rootDirectory, path.basename(file))
        const tags = fs.readFileSync(path.join(rootDirectory, path.basename(file, path.extname(file)) + '.txt')).toString().split("\n");
        const clothData = new ClothData(imagePath, tags)

        database.push(clothData)
    })
    console.log(database)
    console.log(database.length)

    
    return database
}

module.exports = { ClothData, loadDatabase, appendTagToImage, saveImagesAsDatabase };
